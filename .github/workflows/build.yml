# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'


      - name: Install Gomobile
        run: |
          go install golang.org/x/mobile/cmd/gobind@latest
          go install golang.org/x/mobile/cmd/gomobile@latest
          env PATH=$PATH:~/go/bin gomobile init

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          add-to-path: false

      - name: Gomobile build
        id: gomobile_build  # Add an id to this step so you can refer to its outputs in later steps.
        run: |
          AAR_FILE_NAME=my_custom_name.aar  # Set the AAR file name to a variable.

          go get golang.org/x/mobile/bind
          go get -d github.com/Cyberavater/goPlay
          gomobile bind -target=android -javapkg=org.rclone -o $AAR_FILE_NAME github.com/Cyberavater/goPlay
          
          echo "::set-output name=aar_file::$AAR_FILE_NAME"
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          GO111MODULE: off

      # Add this step to list files in the current directory.
      - name: List files
        run: ls -la

      # Add this step to upload the generated AAR file as an artifact.
      - name: Upload AAR artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-aar-file
          path: ${{ steps.gomobile_build.outputs.aar_file }}  # Use the output from the Gomobile build step.
